<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd 
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- 放行页面 -->
	<http pattern="/login.html" security="none"></http>
	<http pattern="/register.html" security="none"></http>
	<http pattern="/css/**" security="none"></http>
	<http pattern="/img/**" security="none"></http>
	<http pattern="/js/**" security="none"></http>
	<http pattern="/plugins/**" security="none"></http>


	<!-- 页面拦截规则 -->
	<!--use-expressions :是否使用Spring表达式 默认为false 如果开启，<intercept-url pattern="/**" 
		access="hasRole('ROLE_USER')" /> -->
	<!--access 如果是字符串的话ROLE_ 必须为这个前缀 -->
	<!-- intercept-url 表示拦截页面 -->
	<!-- form-login :自动生成登录页面 -->


	<http use-expressions="false">
		<intercept-url pattern="/**" access="ROLE_SELLER" />
		<!-- login-page:登录页 default-target-url:默认跳转页，登录成功以后跳哪 authentication-failure-url:认证失败页面 
			always-use-default-target:任何时候都是成功进行验证和授权后跳转默认地址 -->
		<form-login login-page="/login.html"
			default-target-url="/auto.html" authentication-failure-url="/login.html"
			always-use-default-target="true" />
		<csrf disabled="true" /><!-- 跨域攻击 禁用掉 -->

		<headers>
			<frame-options policy="SAMEORIGIN" />
		</headers>


		<logout /><!-- 退出页面 -->
	</http>

	<!-- 认证管理器 -->
	<authentication-manager>
		<!-- <authentication-provider>提供认证者 用户服务 <user-service> <user name="admin" 
			password="admin" authorities="ROLE_ADMIN" /> <user name="zhangsan" password="zhangsan" 
			authorities="ROLE_ADMIN" /> </user-service> </authentication-provider> -->

		<!-- ref引用detailService 提供者 只是引用了一个名字 还得注入进来 -->
		<authentication-provider user-service-ref="userDetailService">
			<!-- <password-encoder ref="bcryptEncoder"></password-encoder>	    -->
		</authentication-provider>
		
		
		<!-- <authentication-provider ref="authenticationProvider">
			<password-encoder ref="bcryptEncoder"></password-encoder>	   
		</authentication-provider> -->

	</authentication-manager>
	
	<!-- <beans:bean id="authenticationProvider" class="com.aisile04.shop.service.AuthenticationProviderImpl">
		<beans:property name="UserDetailsService" ref="userDetailService"></beans:property>
	</beans:bean> -->
	
	
	<!-- 引用进来 -->
	<beans:bean id="userDetailService" class="com.order.service.UserDetailsServiceImpl">
		<!-- 设值注入 -->
		<beans:property name="orderService" ref="orderService"></beans:property>
	</beans:bean>


	<!-- 403 权限 -->

	<dubbo:application name="yue-web" />
	<dubbo:registry address="zookeeper://localhost:2181" />
	<dubbo:reference id="orderService" interface="com.order.service.OrderService"></dubbo:reference>
	
	<beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
</beans:beans>